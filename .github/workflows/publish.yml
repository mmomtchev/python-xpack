name: Publish

on:
  workflow_dispatch:
    inputs:
      build:
        type: number
        description: the build number to use

jobs:
  build_python:
    runs-on: ${{ matrix.platform }}

    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-22.04
          - macos-13
          - macos-14
          - windows-2019

    steps:
      - uses: actions/setup-node@v4
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Get Python version and Node.js arch name
        id: version
        shell: bash
        run: |
          node -p "'python_version=' + require('./package.json').xpack.properties.versionPython" >> $GITHUB_OUTPUT
          node -p "'arch=' + os.platform() + '-' + os.arch()" >> $GITHUB_OUTPUT
      - name: Cache Python dist files
        id: python-dist
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/dist
          key: python-dist
          enableCrossOsArchive: true
      - run: npm install
      - run: npx xpm run build
      - name: Test
        run: npx xpm run test
      - name: Pack (Windows)
        shell: bash
        run: 7z a python-xpack-${{ steps.version.outputs.python_version }}-${{ inputs.build }}-${{ steps.version.outputs.arch }}.zip content
        if: runner.os == 'Windows'
      - name: Pack (POSIX)
        shell: bash
        run: tar -zcvf python-xpack-${{ steps.version.outputs.python_version }}-${{ inputs.build }}-${{ steps.version.outputs.arch }}.tar.gz content
        if: runner.os != 'Windows'
      - uses: actions/upload-artifact@v4
        with:
          name: binary-${{ steps.version.outputs.arch }}
          path: python-xpack-*


  create_release:
    needs: build_python
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Get Python version
        id: version
        shell: bash
        run: |
          node -p "'python_version=' + require('./package.json').xpack.properties.versionPython" >> $GITHUB_OUTPUT
      - uses: actions/download-artifact@v4
        with:
          path: ${{ github.workspace }}
          merge-multiple: true
      - name: Update package.json
        run: node update-package.mjs
      - uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          add: package.json
          message: 'update package.json for ${{ steps.version.outputs.python_version }}-${{ inputs.build }}'
          push: true
          tag: v${{ steps.version.outputs.python_version }}-${{ inputs.build }}
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: python-xpack-*
          draft: true
          tag: v${{ steps.version.outputs.python_version }}-${{ inputs.build }}

